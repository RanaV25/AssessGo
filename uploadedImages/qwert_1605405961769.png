<!doctype html><html lang="en"><head><script type="text/javascript">window.customElements=window.customElements||{};window.customElements.forcePolyfill=true;window.ShadyDOM={force:true};</script><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><base href="."><meta name="viewport" content="width=device-width, initial-scale=1.0"><style type="text/css">body {height:100vh;width:100vw;margin:0;}.v-reconnect-dialog, .v-system-error {position: absolute;color: black;background: white;top: 1em;right: 1em;border: 1px solid black;padding: 1em;z-index: 10000;max-width: calc(100vw - 4em);max-height: calc(100vh - 4em);overflow: auto;} .v-system-error {color: red;pointer-events: auto;}</style><script type="text/javascript" src="./VAADIN/build/webcomponentsjs/webcomponents-loader.js"></script><script type="module" src="./VAADIN/build/vaadin-bundle-886d17efe560d838e919.cache.js" data-app-id="ROOT"></script><script type="text/javascript" defer src="./VAADIN/build/vaadin-bundle.es5-b81e9ec97a832394a612.cache.js" nomodule data-app-id="ROOT"></script><script type="text/javascript">//<![CDATA[
(function() {  var apps = {};  var log;  if (typeof console === undefined || !window.location.search.match(/[&?]debug(&|$)/)) {    /* If no console.log present, just use a no-op */    log = function() {};  } else if (typeof console.log === "function") {    /* If it's a function, use it with apply */    log = function() {      console.log.apply(console, arguments);    };  } else {    /* In IE, its a native function for which apply is not defined, but it works     without a proper 'this' reference */    log = console.log;  }    var isInitializedInDom = function(appId) {    var appDiv = document.getElementById(appId);    if (!appDiv) {      return false;    }    for ( var i = 0; i < appDiv.childElementCount; i++) {      var className = appDiv.childNodes[i].className;      /* If the app div contains a child with the class      "v-app-loading" we have only received the HTML      but not yet started the widget set      (UIConnector removes the v-app-loading div). */      if (className && className.indexOf("v-app-loading") != -1) {        return false;      }    }    return true;  };    /*    * Needed for Testbench compatibility, but prevents any Vaadin 7 app from   * bootstrapping unless the legacy vaadinBootstrap.js file is loaded before   * this script.   */  window.Vaadin = window.Vaadin || {};  window.Vaadin.Flow = window.Vaadin.Flow || {};  /*   * Needed for wrapping custom javascript functionality in the components (i.e. connectors)   */  window.Vaadin.Flow.tryCatchWrapper = function(originalFunction, component, repo) {    return function() {      try {        const result = originalFunction.apply(this, arguments);        return result;      } catch (error) {        console.error(            "There seems to be an error in the " + component + ":\n" + error.message + "\n"              + "Please submit an issue to https://github.com/vaadin/" + repo              + "/issues/new!");      }    }  };  if (!window.Vaadin.Flow.clients) {    window.Vaadin.Flow.clients = {};    window.Vaadin.Flow.pendingStartup = {};    window.Vaadin.Flow.initApplication = function(appId, config) {      var testbenchId = appId.replace(/-\d+$/, '');            if (apps[appId]) {        if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients && window.Vaadin.Flow.clients[testbenchId] && window.Vaadin.Flow.clients[testbenchId].initializing) {          throw "Application " + appId + " is already being initialized";        }        if (isInitializedInDom(appId)) {          throw "Application " + appId + " already initialized";        }      }        log("init application", appId, config);            window.Vaadin.Flow.clients[testbenchId] = {          isActive: function() {            return true;          },          initializing: true,          productionMode: mode      };            var getConfig = function(name) {        var value = config[name];        return value;      };            /* Export public data */      var app = {        getConfig: getConfig      };      apps[appId] = app;            if (!window.name) {        window.name =  appId + '-' + Math.random();      }        var widgetset = "client";      if (!window.Vaadin.Flow.pendingStartup[widgetset]) {        window.Vaadin.Flow.pendingStartup[widgetset] = {          pendingApps: []        };      }      if (window.Vaadin.Flow.pendingStartup[widgetset].callback) {        log("Starting from bootstrap", appId);        window.Vaadin.Flow.pendingStartup[widgetset].callback(appId);      } else {        log("Setting pending startup", appId);        window.Vaadin.Flow.pendingStartup[widgetset].pendingApps.push(appId);      }      return app;    };    window.Vaadin.Flow.getAppIds = function() {      var ids = [ ];      for (var id in apps) {        if (apps.hasOwnProperty(id)) {          ids.push(id);        }      }      return ids;    };    window.Vaadin.Flow.getApp = function(appId) {      return apps[appId];    };    window.Vaadin.Flow.registerWidgetset = function(widgetset, callback) {      log("Widgetset registered", widgetset);      if (!window.Vaadin.Flow.pendingStartup[widgetset]) {        window.Vaadin.Flow.pendingStartup[widgetset] = {          pendingApps: [],          callback: callback        };        /* Callback will be invoked when initApp is called */        return;      }      var ws = window.Vaadin.Flow.pendingStartup[widgetset];      if (ws.pendingApps) {        ws.callback = callback;        for (var i = 0; i < ws.pendingApps.length; i++) {          var appId = ws.pendingApps[i];          log("Starting from register widgetset", appId);          callback(appId);        }        ws.pendingApps = null;      }    };    window.Vaadin.Flow.getBrowserDetailsParameters = function() {      var params = {  };      /* Screen height and width */      params['v-sh'] = window.screen.height;      params['v-sw'] = window.screen.width;      /* Browser window dimensions */      params['v-wh'] = window.innerHeight;      params['v-ww'] = window.innerWidth;      /* Body element dimensions */      params['v-bh'] = document.body.clientHeight;      params['v-bw'] = document.body.clientWidth;      /* Current time */      var date = new Date();      params['v-curdate'] = date.getTime();      /* Current timezone offset (including DST shift) */      var tzo1 = date.getTimezoneOffset();      /* Compare the current tz offset with the first offset from the end         of the year that differs --- if less that, we are in DST, otherwise         we are in normal time */      var dstDiff = 0;      var rawTzo = tzo1;      for(var m = 12; m > 0; m--) {        date.setUTCMonth(m);        var tzo2 = date.getTimezoneOffset();        if (tzo1 != tzo2) {          dstDiff = (tzo1 > tzo2 ? tzo1 - tzo2 : tzo2 - tzo1);          rawTzo = (tzo1 > tzo2 ? tzo1 : tzo2);          break;        }      }      /* Time zone offset */      params['v-tzo'] = tzo1;      /* DST difference */      params['v-dstd'] = dstDiff;      /* Time zone offset without DST */      params['v-rtzo'] = rawTzo;      /* DST in effect? */      params['v-dston'] = (tzo1 != rawTzo);      /* Time zone id (if available) */      try {        params['v-tzid'] = Intl.DateTimeFormat().resolvedOptions().timeZone;      } catch (err) {        params['v-tzid'] = '';      }      /* Window name */      if (window.name) {        params['v-wn'] = window.name;      }      /* Detect touch device support */      var supportsTouch = false;      try {        document.createEvent("TouchEvent");        supportsTouch = true;      } catch (e) {        /* Chrome and IE10 touch detection */        supportsTouch = 'ontouchstart' in window          || (typeof navigator.msMaxTouchPoints !== 'undefined');      }      params['v-td'] = supportsTouch;      /* Device Pixel Ratio */      params['v-pr'] = window.devicePixelRatio;      /* Stringify each value (they are parsed on the server side) */      Object.keys(params).forEach(function(key) {        var value = params[key];        if (typeof value !== 'undefined') {          params[key] = value.toString();        }      });      return params;    };  }    log('Flow bootstrap loaded');    if (typeof window.__gwtStatsEvent != 'function') {window.Vaadin.Flow.gwtStatsEvents = [];window.__gwtStatsEvent = function(event) {window.Vaadin.Flow.gwtStatsEvents.push(event); return true;};};    var uidl = {
    "syncId": 0,
    "clientId": 0,
    "constants": {
        "Syvo6V28g8Q=": {
            "event.detail.username": false,
            "event.detail.password": false
        },
        "F8oCtNArLiI=": {
            "event.shiftKey": false,
            "event.metaKey": false,
            "event.detail": false,
            "event.ctrlKey": false,
            "event.clientX": false,
            "event.clientY": false,
            "event.altKey": false,
            "event.button": false,
            "event.screenY": false,
            "event.screenX": false
        }
    },
    "changes": [
        {
            "node": 1,
            "type": "put",
            "key": "tag",
            "feat": 0,
            "value": "body"
        },
        {
            "node": 1,
            "type": "splice",
            "feat": 2,
            "index": 0,
            "addNodes": [
                5
            ]
        },
        {
            "node": 1,
            "type": "put",
            "key": "pushUrl",
            "feat": 5,
            "value": "context://vaadinServlet/"
        },
        {
            "node": 1,
            "type": "put",
            "key": "alwaysXhrToServer",
            "feat": 5,
            "value": true
        },
        {
            "node": 1,
            "type": "put",
            "key": "pushMode",
            "feat": 5,
            "value": "DISABLED"
        },
        {
            "node": 1,
            "type": "put",
            "key": "parameters",
            "feat": 5,
            "nodeValue": 2
        },
        {
            "node": 2,
            "type": "attach"
        },
        {
            "node": 2,
            "type": "put",
            "key": "fallbackTransport",
            "feat": 6,
            "value": "long-polling"
        },
        {
            "node": 2,
            "type": "put",
            "key": "transport",
            "feat": 6,
            "value": "websocket"
        },
        {
            "node": 3,
            "type": "attach"
        },
        {
            "node": 3,
            "type": "put",
            "key": "payload",
            "feat": 0,
            "value": {
                "type": "@id",
                "payload": "btnSignUp"
            }
        },
        {
            "node": 3,
            "type": "put",
            "key": "tag",
            "feat": 0,
            "value": "vaadin-button"
        },
        {
            "node": 3,
            "type": "put",
            "key": "click",
            "feat": 4,
            "value": "F8oCtNArLiI="
        },
        {
            "node": 4,
            "type": "attach"
        },
        {
            "node": 4,
            "type": "put",
            "key": "payload",
            "feat": 0,
            "value": {
                "type": "@id",
                "payload": "userLoginForm"
            }
        },
        {
            "node": 4,
            "type": "put",
            "key": "tag",
            "feat": 0,
            "value": "vaadin-login-form"
        },
        {
            "node": 4,
            "type": "put",
            "key": "_preventAutoEnable",
            "feat": 1,
            "value": true
        },
        {
            "node": 4,
            "type": "put",
            "key": "action",
            "feat": 1,
            "value": "login"
        },
        {
            "node": 4,
            "type": "put",
            "key": "i18n",
            "feat": 1,
            "value": {
                "additionalInformation": null,
                "errorMessage": {
                    "message": "Check that you have entered the correct username and password and try again.",
                    "title": "Incorrect username or password"
                },
                "form": {
                    "forgotPassword": "Forgot password",
                    "password": "Password",
                    "submit": "Log in",
                    "title": "Log in",
                    "username": "Username"
                },
                "header": null
            }
        },
        {
            "node": 4,
            "type": "put",
            "key": "login",
            "feat": 4,
            "value": "Syvo6V28g8Q="
        },
        {
            "node": 4,
            "type": "splice",
            "feat": 13,
            "index": 0,
            "add": [
                "error",
                "action",
                "disabled"
            ]
        },
        {
            "node": 4,
            "type": "splice",
            "feat": 14,
            "index": 0,
            "add": [
                "error-changed",
                "action-changed",
                "login"
            ]
        },
        {
            "node": 5,
            "type": "attach"
        },
        {
            "node": 5,
            "type": "put",
            "key": "tag",
            "feat": 0,
            "value": "login-view"
        },
        {
            "node": 5,
            "type": "splice",
            "feat": 24,
            "index": 0,
            "addNodes": [
                4,
                3
            ]
        }
    ],
    "execute": [
        [
            [
                0,
                5
            ],
            [
                1,
                [
                    
                ]
            ],
            "this.registerUpdatableModelProperties($0, $1)"
        ],
        [
            [
                0,
                5
            ],
            [
                1,
                [
                    
                ]
            ],
            "this.populateModelProperties($0, $1)"
        ]
    ],
    "timings": [
        0,
        -1
    ],
    "Vaadin-Security-Key": "09ad5803-d7af-4f27-94c2-c8ed609ae6f6",
    "Vaadin-Push-ID": "4362c2be-2639-4d7a-9ece-04a37141cb57"
};  var config = {
    "frontendUrlEs6": "context://frontend/",
    "frontendUrlEs5": "context://frontend/",
    "versionInfo": {
        "vaadinVersion": "2.1.1",
        "atmosphereVersion": "2.4.30.slf4jvaadin1"
    },
    "sessExpMsg": {
        "caption": null,
        "message": null,
        "url": null
    },
    "contextRootUrl": "./",
    "debug": true,
    "requestTiming": true,
    "heartbeatInterval": 300,
    "v-uiId": 0
};  var mode = false;  config.uidl = uidl;  window.Vaadin.Flow.initApplication("ROOT-2521314", config);})();//]]></script><script type="text/javascript" defer src="./VAADIN/static/client/client-EFB6081741306D23AA1BBFA6CFAA8504.cache.js"></script><meta name="apple-mobile-web-app-capable" content="yes"><meta name="theme-color" content="#233348"><meta name="apple-mobile-web-app-status-bar-style" content="#233348"><link rel="manifest" href="manifest.webmanifest"><link sizes="16x16" rel="shortcut icon" href="images/logo-18-16x16.png" type="image/png"><link sizes="32x32" rel="icon" href="images/logo-18-32x32.png?-2087744108" type="image/png"><link sizes="96x96" rel="icon" href="images/logo-18-96x96.png?1713631522" type="image/png"><link sizes="180x180" rel="apple-touch-icon" href="images/logo-18-180x180.png?-533695959" type="image/png"><link sizes="1125x2436" rel="apple-touch-startup-image" media="(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3)" href="images/logo-18-1125x2436.png?-688834165" type="image/png"><link sizes="750x1334" rel="apple-touch-startup-image" media="(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2)" href="images/logo-18-750x1334.png?-1346703542" type="image/png"><link sizes="1242x2208" rel="apple-touch-startup-image" media="(device-width: 414px) and (device-height: 763px) and (-webkit-device-pixel-ratio: 3)" href="images/logo-18-1242x2208.png?1508207887" type="image/png"><link sizes="640x1136" rel="apple-touch-startup-image" media="(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)" href="images/logo-18-640x1136.png?893776263" type="image/png"><script>if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('sw.js');
  });
}</script></head><body><noscript>You have to enable javascript in your browser to use this web site.</noscript><script>window.Vaadin.registrations = window.Vaadin.registrations || [];
window.Vaadin.registrations.push({"is":"flow/SpringInstantiator","version":"2.1.1"},{"is":"java","version":"12.0.2"},{"is":"flow/generic-dnd","version":"2.1.1"},{"is":"flow/PolymerTemplate","version":"2.1.1"},{"is":"flow/npm","version":"2.1.1"});</script><div id="pwa-ip" role="dialog">  <div class="banner">    <div class="app-icon" style="background-image: url(/images/logo-18-512x512.png);"></div>    <div class="content">      <h3>Weave Realm</h3>      <p><!-- Placeholder for a short help text --></p>    </div>    <button id="pwa-promptip">Install</button>    <button id="pwa-closeip">      <svg width="24" height="24" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor">        <path d="M10.671154 12l-3.39594-3.39594c-.366952-.366951-.366952-.961896 0-1.328847.36695-.36695.961895-.36695 1.328845 0L12 10.671153l3.39594-3.39594c.366951-.36695.961896-.36695 1.328847 0 .36695.36695.36695.961896 0 1.328846L13.328847 12l3.39594 3.39594c.36695.366951.36695.961896 0 1.328847-.36695.36695-.961896.36695-1.328846 0L12 13.328847l-3.39594 3.39594c-.366951.36695-.961896.36695-1.328847 0-.36695-.36695-.36695-.961896 0-1.328846L10.671153 12z" />      </svg>    </button>  </div></div><style>  #pwa-ip {    display: block !important;    position: fixed;    z-index: 9999;    bottom: 0;    width: 100%;    transform: translateY(200%);    transition: transform 0.3s;    pointer-events: none;    text-align: center;  }  #pwa-ip.visible {    transform: translateY(0%);  }  #pwa-ip .banner {    text-align: left;    text-align: initial;    display: inline-flex;    align-items: center;    background-color: rgba(0, 0, 0, 0.9);    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2), 0 2px 18px rgba(0, 0, 0, 0.3);    border-radius: 0.5em;    padding: 0.5em;    margin: 0.5em;    font-size: 1rem;    line-height: 1.125em;    font-family: -apple-system, BlinkMacSystemFont, "Roboto", "Segoe UI", Helvetica, Arial, sans-serif;    color: #fff;    pointer-events: auto;  }  #pwa-ip .app-icon {    flex: none;    width: 2.5em;    height: 2.5em;    border-radius: 0.25em;    background-size: contain;    background-position: center;    background-repeat: no-repeat;    margin-right: 0.5em;    background-color: #fff;  }  #pwa-ip .content {    flex: auto;    margin-right: 1em;  }  #pwa-ip h3 {    color: inherit;    font: inherit;    font-weight: 600;    margin: 0;  }  #pwa-ip p {    opacity: 0.7;    margin: 0;    font-size: 0.875em;  }  #pwa-ip button {    flex: none;    height: 2.5em;    border: 0;    margin: 0;    padding: 0;    font: inherit;    color: inherit;    outline: none;  }  button#pwa-closeip {    background: transparent;    width: 2.5em;    margin-left: 0.25em;    opacity: 0.7;  }  #pwa-closeip:hover,  #pwa-closeip:focus {    opacity: 1;  }  button#pwa-promptip {    background-color: rgba(255, 255, 255, 0.2);    font-size: 0.875em;    padding: 0 1em;    font-weight: 600;    border-radius: 0.3em;  }  #pwa-promptip:hover,  #pwa-promptip:focus {    background-color: rgba(255, 255, 255, 0.3);  }</style><script type="application/javascript">    window.addEventListener("load", function() {        window.Vaadin.Flow.pwaIPUI = document.getElementById("pwa-ip");        window.addEventListener("beforeinstallprompt", function(e) {            e.preventDefault();            window.Vaadin.Flow.deferredPrompt = e;            window.Vaadin.Flow.pwaIPUI.className = "visible";        });        document.getElementById("pwa-closeip").addEventListener("click", function() {            window.Vaadin.Flow.pwaIPUI.className = "";        });        document.getElementById("pwa-promptip").addEventListener("click", function() {            window.Vaadin.Flow.pwaIPUI.className = "";            window.Vaadin.Flow.deferredPrompt.prompt();            window.Vaadin.Flow.deferredPrompt.userChoice                .then(function() {                    window.Vaadin.Flow.deferredPrompt = null;                });        });    });</script></body></html>